// -----------------------------------------------------------------------
// <autogenerated>
//    This code was generated from a template.
//
//    Changes to this file may cause incorrect behaviour and will be lost
//    if the code is regenerated.
// </autogenerated>
// ------------------------------------------------------------------------
namespace Genesis.DataStore.UnitTests.Mocks
{
    [System.CodeDom.Compiler.GeneratedCode("PCLMock", "5.0.1.0")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class DataStoreServiceMock : global::PCLMock.MockBase<global::Genesis.DataStore.IDataStoreService>, global::Genesis.DataStore.IDataStoreService
    {
        public DataStoreServiceMock(global::PCLMock.MockBehavior behavior = global::PCLMock.MockBehavior.Strict): base (behavior)
        {
            ConfigureBehaviorGenerated();
            ConfigureBehavior();
            if ((behavior) == (global::PCLMock.MockBehavior.Loose))
            {
                ConfigureLooseBehaviorGenerated();
                ConfigureLooseBehavior();
            }
        }

        private void ConfigureBehaviorGenerated()
        {
        }

        private void ConfigureLooseBehaviorGenerated()
        {
        }

        partial void ConfigureBehavior();
        partial void ConfigureLooseBehavior();
        public global::SQLitePCL.pretty.IDatabaseConnection Connection
        {
            get
            {
                return this.Apply(x => x.Connection);
            }
        }

        public global::System.IObservable<global::Genesis.DataStore.DataStoreVersion> GetLatestVersion()
        {
            return this.Apply(x => x.GetLatestVersion());
        }

        public global::System.IObservable<global::System.Boolean> GetIsUpgradeAvailable()
        {
            return this.Apply(x => x.GetIsUpgradeAvailable());
        }

        public global::System.IObservable<global::System.Reactive.Unit> Upgrade()
        {
            return this.Apply(x => x.Upgrade());
        }
    }
}
namespace Genesis.DataStore.UnitTests.Mocks
{
    [System.CodeDom.Compiler.GeneratedCode("PCLMock", "5.0.1.0")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class UpgradeHandlerMock : global::PCLMock.MockBase<global::Genesis.DataStore.IUpgradeHandler>, global::Genesis.DataStore.IUpgradeHandler
    {
        public UpgradeHandlerMock(global::PCLMock.MockBehavior behavior = global::PCLMock.MockBehavior.Strict): base (behavior)
        {
            ConfigureBehaviorGenerated();
            ConfigureBehavior();
            if ((behavior) == (global::PCLMock.MockBehavior.Loose))
            {
                ConfigureLooseBehaviorGenerated();
                ConfigureLooseBehavior();
            }
        }

        private void ConfigureBehaviorGenerated()
        {
        }

        private void ConfigureLooseBehaviorGenerated()
        {
        }

        partial void ConfigureBehavior();
        partial void ConfigureLooseBehavior();
        public global::System.Version Version
        {
            get
            {
                return this.Apply(x => x.Version);
            }
        }

        public void Apply(global::SQLitePCL.pretty.IDatabaseConnection connection)
        {
            this.Apply(x => x.Apply(connection));
        }
    }
}
namespace Genesis.DataStore.UnitTests.Mocks
{
    [System.CodeDom.Compiler.GeneratedCode("PCLMock", "5.0.1.0")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class UpgradeHandlerProviderMock : global::PCLMock.MockBase<global::Genesis.DataStore.IUpgradeHandlerProvider>, global::Genesis.DataStore.IUpgradeHandlerProvider
    {
        public UpgradeHandlerProviderMock(global::PCLMock.MockBehavior behavior = global::PCLMock.MockBehavior.Strict): base (behavior)
        {
            ConfigureBehaviorGenerated();
            ConfigureBehavior();
            if ((behavior) == (global::PCLMock.MockBehavior.Loose))
            {
                ConfigureLooseBehaviorGenerated();
                ConfigureLooseBehavior();
            }
        }

        private void ConfigureBehaviorGenerated()
        {
            this.When(x => x.Handlers).Return(global::System.Linq.Enumerable.Empty<global::Genesis.DataStore.IUpgradeHandler>());
        }

        private void ConfigureLooseBehaviorGenerated()
        {
        }

        partial void ConfigureBehavior();
        partial void ConfigureLooseBehavior();
        public global::System.Collections.Generic.IEnumerable<global::Genesis.DataStore.IUpgradeHandler> Handlers
        {
            get
            {
                return this.Apply(x => x.Handlers);
            }
        }
    }
}
namespace Genesis.DataStore.UnitTests.Internal.Mocks
{
    [System.CodeDom.Compiler.GeneratedCode("PCLMock", "5.0.1.0")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    internal partial class DataStoreVersionRepositoryMock : global::PCLMock.MockBase<global::Genesis.DataStore.Internal.IDataStoreVersionRepository>, global::Genesis.DataStore.Internal.IDataStoreVersionRepository
    {
        public DataStoreVersionRepositoryMock(global::PCLMock.MockBehavior behavior = global::PCLMock.MockBehavior.Strict): base (behavior)
        {
            ConfigureBehaviorGenerated();
            ConfigureBehavior();
            if ((behavior) == (global::PCLMock.MockBehavior.Loose))
            {
                ConfigureLooseBehaviorGenerated();
                ConfigureLooseBehavior();
            }
        }

        private void ConfigureBehaviorGenerated()
        {
            this.When(x => x.GetAll()).Return(global::System.Collections.Immutable.ImmutableList<global::Genesis.DataStore.Internal.DataStoreVersionEntity>.Empty);
            this.When(x => x.SaveAll(global::PCLMock.It.IsAny<global::System.Collections.Generic.IEnumerable<global::Genesis.DataStore.Internal.DataStoreVersionEntity>>())).Return(global::System.Collections.Immutable.ImmutableList<global::Genesis.DataStore.Internal.DataStoreVersionEntity>.Empty);
            this.When(x => x.SaveAll(global::PCLMock.It.IsAny<global::Genesis.DataStore.Internal.DataStoreVersionEntity[]>())).Return(global::System.Collections.Immutable.ImmutableList<global::Genesis.DataStore.Internal.DataStoreVersionEntity>.Empty);
        }

        private void ConfigureLooseBehaviorGenerated()
        {
        }

        partial void ConfigureBehavior();
        partial void ConfigureLooseBehavior();
        public global::System.Boolean Exists()
        {
            return this.Apply(x => x.Exists());
        }

        public global::Genesis.DataStore.Internal.DataStoreVersionEntity GetLatest()
        {
            return this.Apply(x => x.GetLatest());
        }

        public global::Genesis.DataStore.Internal.DataStoreVersionEntity Get(global::System.Int32 id)
        {
            return this.Apply(x => x.Get(id));
        }

        public global::System.Collections.Immutable.IImmutableList<global::Genesis.DataStore.Internal.DataStoreVersionEntity> GetAll()
        {
            return this.Apply(x => x.GetAll());
        }

        public global::Genesis.DataStore.Internal.DataStoreVersionEntity Save(global::Genesis.DataStore.Internal.DataStoreVersionEntity entity)
        {
            return this.Apply(x => x.Save(entity));
        }

        public global::System.Collections.Immutable.IImmutableList<global::Genesis.DataStore.Internal.DataStoreVersionEntity> SaveAll(global::System.Collections.Generic.IEnumerable<global::Genesis.DataStore.Internal.DataStoreVersionEntity> entities)
        {
            return this.Apply(x => x.SaveAll(entities));
        }

        public global::System.Collections.Immutable.IImmutableList<global::Genesis.DataStore.Internal.DataStoreVersionEntity> SaveAll(global::Genesis.DataStore.Internal.DataStoreVersionEntity[] entities)
        {
            return this.Apply(x => x.SaveAll(entities));
        }

        public global::System.Boolean Delete(global::System.Int32 id)
        {
            return this.Apply(x => x.Delete(id));
        }

        public global::System.Int32 DeleteAll()
        {
            return this.Apply(x => x.DeleteAll());
        }
    }
}

/*
[PCLMock.CodeGeneration.XmlBasedGenerator] [Info] Loading XML input file 'C:\Users\Kent\Repository\Genesis.DataStore\Src\Genesis.DataStore.UnitTests\Mocks.xml'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug] Created configuration with the following rules:
 - Namespaces matching 'Genesis\.DataStore\.(?<remainder>.*)' will be replaced with 'Genesis.DataStore.UnitTests.${remainder}'.
 - Namespaces matching 'Genesis\.DataStore$' will be replaced with 'Genesis.DataStore.UnitTests'.
 - Namespaces matching '(?<name>.+)' will be replaced with '${name}.Mocks'.
 - Names matching 'I(?<name>[A-Z].*)' will be replaced with '${name}'.
 - Names matching '(?<name>[A-Z].*)\<.*\>' will be replaced with '${name}'.
 - Names matching '(?<name>.+)' will be replaced with '${name}Mock'.
 - Interfaces matching 'Genesis\.DataStore\..*' will be 'included.
 - Plugin with assembly-qualified name 'PCLMock.CodeGeneration.Plugins.Collections, PCLMock.CodeGeneration' will be applied.
 - Plugin with assembly-qualified name 'PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony, PCLMock.CodeGeneration' will be applied.
 - Plugin with assembly-qualified name 'PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony, PCLMock.CodeGeneration' will be applied.
 - Plugin with assembly-qualified name 'PCLMock.CodeGeneration.Plugins.Disposables, PCLMock.CodeGeneration' will be applied.

[PCLMock.CodeGeneration.Models.Configuration] [Info] Attempting to resolve plugin from type name 'PCLMock.CodeGeneration.Plugins.Collections, PCLMock.CodeGeneration'.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Attempting to resolve plugin from type name 'PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony, PCLMock.CodeGeneration'.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Attempting to resolve plugin from type name 'PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony, PCLMock.CodeGeneration'.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Attempting to resolve plugin from type name 'PCLMock.CodeGeneration.Plugins.Disposables, PCLMock.CodeGeneration'.
[PCLMock.CodeGeneration.Generator] [Debug] Compilation generated for project 'Genesis.DataStore' with references:
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\genesis.ensure\2.0.0\lib\netstandard1.0\Genesis.Ensure.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\genesis.join\2.0.0\lib\netstandard1.0\Genesis.Join.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\genesis.logging\2.0.0\lib\netstandard1.0\Genesis.Logging.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\genesis.repository\2.0.0\lib\netstandard1.0\Genesis.Repository.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\sqlitepcl.pretty\1.0.0\lib\portable-net45+netcore45+wpa81+wp8\SQLitePCL.pretty.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\sqlitepcl.raw\0.8.2\lib\portable-net45+netcore45+wpa81+wp8+MonoAndroid10+MonoTouch10+Xamarin.iOS10\SQLitePCL.raw.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.collections\4.3.0\ref\netstandard1.0\System.Collections.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.collections.immutable\1.2.0\lib\netstandard1.0\System.Collections.Immutable.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.componentmodel\4.0.1\ref\netstandard1.0\System.ComponentModel.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.diagnostics.debug\4.3.0\ref\netstandard1.0\System.Diagnostics.Debug.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.diagnostics.tools\4.3.0\ref\netstandard1.0\System.Diagnostics.Tools.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.dynamic.runtime\4.0.11\ref\netstandard1.0\System.Dynamic.Runtime.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.globalization\4.3.0\ref\netstandard1.0\System.Globalization.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.io\4.3.0\ref\netstandard1.0\System.IO.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.linq\4.3.0\ref\netstandard1.0\System.Linq.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.linq.expressions\4.3.0\ref\netstandard1.0\System.Linq.Expressions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.net.primitives\4.3.0\ref\netstandard1.0\System.Net.Primitives.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.objectmodel\4.3.0\ref\netstandard1.0\System.ObjectModel.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reactive.core\3.0.0\lib\netstandard1.0\System.Reactive.Core.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reactive.interfaces\3.0.0\lib\netstandard1.0\System.Reactive.Interfaces.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reactive.linq\3.0.0\lib\netstandard1.0\System.Reactive.Linq.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reactive.platformservices\3.0.0\lib\netstandard1.0\System.Reactive.PlatformServices.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reflection\4.3.0\ref\netstandard1.0\System.Reflection.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reflection.extensions\4.3.0\ref\netstandard1.0\System.Reflection.Extensions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reflection.primitives\4.3.0\ref\netstandard1.0\System.Reflection.Primitives.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.resources.resourcemanager\4.3.0\ref\netstandard1.0\System.Resources.ResourceManager.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.runtime\4.3.0\ref\netstandard1.0\System.Runtime.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.runtime.extensions\4.3.0\ref\netstandard1.0\System.Runtime.Extensions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.runtime.interopservices.windowsruntime\4.0.1\ref\netstandard1.0\System.Runtime.InteropServices.WindowsRuntime.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.text.encoding\4.3.0\ref\netstandard1.0\System.Text.Encoding.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.text.encoding.extensions\4.3.0\ref\netstandard1.0\System.Text.Encoding.Extensions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.text.regularexpressions\4.3.0\ref\netstandard1.0\System.Text.RegularExpressions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.threading\4.3.0\ref\netstandard1.0\System.Threading.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.threading.tasks\4.3.0\ref\netstandard1.0\System.Threading.Tasks.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.xml.readerwriter\4.3.0\ref\netstandard1.0\System.Xml.ReaderWriter.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.xml.xdocument\4.3.0\ref\netstandard1.0\System.Xml.XDocument.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\Repository\Genesis.DataStore\Src\packages\PCLMock.CodeGeneration.T4.5.0.1-alpha\tools\PCLMock.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\Extensions\Xamarin.VisualStudio\System.Reactive.Linq.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\Extensions\Xamarin.VisualStudio\System.Reactive.Core.dll
[PCLMock.CodeGeneration.Generator] [Debug] Compilation generated for project 'Genesis.DataStore.UnitTests' with references:
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\genesis.ensure\2.0.0\lib\netstandard1.0\Genesis.Ensure.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\genesis.join\2.0.0\lib\netstandard1.0\Genesis.Join.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\genesis.logging\2.0.0\lib\netstandard1.0\Genesis.Logging.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\genesis.repository\2.0.0\lib\netstandard1.0\Genesis.Repository.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\genesis.testutil\2.0.0\lib\netstandard1.1\Genesis.TestUtil.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\mscorlib.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\pclmock\5.0.4-alpha\lib\portable-net45+win8+wp8+wpa81\PCLMock.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\sqlitepcl.pretty\1.0.0\lib\portable-net45+netcore45+wpa81+wp8\SQLitePCL.pretty.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\sqlitepcl.raw\0.8.2\lib\net45\SQLitePCL.raw.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.collections.immutable\1.2.0\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.ComponentModel.Composition.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Core.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Data.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Drawing.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.IO.Compression.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.IO.Compression.FileSystem.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Net.Http.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Numerics.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reactive.core\3.0.0\lib\net45\System.Reactive.Core.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reactive.interfaces\3.0.0\lib\net45\System.Reactive.Interfaces.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reactive.linq\3.0.0\lib\net45\System.Reactive.Linq.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reactive.platformservices\3.0.0\lib\net45\System.Reactive.PlatformServices.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.reactive.windows.threading\3.0.0\lib\net45\System.Reactive.Windows.Threading.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\system.runtime.interopservices.runtimeinformation\4.3.0\ref\netstandard1.1\System.Runtime.InteropServices.RuntimeInformation.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Runtime.Serialization.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Xml.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Xml.Linq.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\WindowsBase.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\xunit.abstractions\2.0.1\lib\net35\xunit.abstractions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\xunit.assert\2.3.0-beta1-build3642\lib\netstandard1.1\xunit.assert.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\xunit.extensibility.core\2.3.0-beta1-build3642\lib\netstandard1.1\xunit.core.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\.nuget\packages\xunit.extensibility.execution\2.3.0-beta1-build3642\lib\net452\xunit.execution.desktop.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Collections.Concurrent.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Collections.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.ComponentModel.Annotations.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.ComponentModel.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.ComponentModel.EventBasedAsync.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Diagnostics.Contracts.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Diagnostics.Debug.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Diagnostics.Tools.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Diagnostics.Tracing.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Dynamic.Runtime.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Globalization.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.IO.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Linq.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Linq.Expressions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Linq.Parallel.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Linq.Queryable.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Net.NetworkInformation.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Net.Primitives.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Net.Requests.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.ObjectModel.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Reflection.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Reflection.Emit.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Reflection.Emit.ILGeneration.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Reflection.Emit.Lightweight.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Reflection.Extensions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Reflection.Primitives.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Resources.ResourceManager.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Runtime.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Runtime.Extensions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Runtime.InteropServices.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Runtime.InteropServices.WindowsRuntime.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Runtime.Numerics.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Runtime.Serialization.Json.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Runtime.Serialization.Primitives.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Runtime.Serialization.Xml.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Security.Principal.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.ServiceModel.Duplex.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.ServiceModel.Http.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.ServiceModel.NetTcp.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.ServiceModel.Primitives.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.ServiceModel.Security.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Text.Encoding.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Text.Encoding.Extensions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Text.RegularExpressions.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Threading.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Threading.Tasks.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Threading.Tasks.Parallel.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Threading.Timer.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Xml.ReaderWriter.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Xml.XDocument.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades\System.Xml.XmlSerializer.dll
[PCLMock.CodeGeneration.Generator] [Debug] - Genesis.DataStore
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Users\Kent\Repository\Genesis.DataStore\Src\packages\PCLMock.CodeGeneration.T4.5.0.1-alpha\tools\PCLMock.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\Extensions\Xamarin.VisualStudio\System.Reactive.Linq.dll
[PCLMock.CodeGeneration.Generator] [Debug] - C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\Extensions\Xamarin.VisualStudio\System.Reactive.Core.dll
[PCLMock.CodeGeneration.Models.Configuration] [Info] Determining inclusivity of interface: 'Genesis.DataStore.IDataStoreService, Genesis.DataStore'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after inclusion filter 'Genesis\.DataStore\..*', it is included.
[PCLMock.CodeGeneration.Models.Configuration] [Positive] 'Genesis.DataStore.IDataStoreService, Genesis.DataStore' has been included.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Applying namespace transformations to input: 'Genesis.DataStore'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'Genesis\.DataStore\.(?<remainder>.*)' -> 'Genesis.DataStore.UnitTests.${remainder}', input is now 'Genesis.DataStore'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'Genesis\.DataStore$' -> 'Genesis.DataStore.UnitTests', input is now 'Genesis.DataStore.UnitTests'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>.+)' -> '${name}.Mocks', input is now 'Genesis.DataStore.UnitTests.Mocks'.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Applying name transformations to input: 'IDataStoreService'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'I(?<name>[A-Z].*)' -> '${name}', input is now 'DataStoreService'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>[A-Z].*)\<.*\>' -> '${name}', input is now 'DataStoreService'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>.+)' -> '${name}Mock', input is now 'DataStoreServiceMock'.
[PCLMock.CodeGeneration.Generator] [Positive] Generating mock for interface 'Genesis.DataStore.IDataStoreService' with namespace 'Genesis.DataStore.UnitTests.Mocks', name 'DataStoreServiceMock'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Connection'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol '{0}' because its return type is not a generic type, so it cannot be one of the supported collection types.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Connection'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.Connection' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Connection'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Connection'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Connection.get'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.Connection.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Connection.get'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.Connection.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Connection.get'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.Connection.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Connection.get'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.Connection.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.GetLatestVersion()'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.GetLatestVersion()' because it does not return a supported collection type.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.GetLatestVersion()'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.GetLatestVersion()' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.GetLatestVersion()'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.GetLatestVersion()'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.GetIsUpgradeAvailable()'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.GetIsUpgradeAvailable()' because it does not return a supported collection type.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.GetIsUpgradeAvailable()'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.GetIsUpgradeAvailable()' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.GetIsUpgradeAvailable()'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.GetIsUpgradeAvailable()'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Upgrade()'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.Upgrade()' because it does not return a supported collection type.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Upgrade()'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IDataStoreService.Upgrade()' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Upgrade()'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.IDataStoreService.Upgrade()'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Determining inclusivity of interface: 'Genesis.DataStore.IUpgradeHandler, Genesis.DataStore'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after inclusion filter 'Genesis\.DataStore\..*', it is included.
[PCLMock.CodeGeneration.Models.Configuration] [Positive] 'Genesis.DataStore.IUpgradeHandler, Genesis.DataStore' has been included.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Applying namespace transformations to input: 'Genesis.DataStore'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'Genesis\.DataStore\.(?<remainder>.*)' -> 'Genesis.DataStore.UnitTests.${remainder}', input is now 'Genesis.DataStore'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'Genesis\.DataStore$' -> 'Genesis.DataStore.UnitTests', input is now 'Genesis.DataStore.UnitTests'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>.+)' -> '${name}.Mocks', input is now 'Genesis.DataStore.UnitTests.Mocks'.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Applying name transformations to input: 'IUpgradeHandler'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'I(?<name>[A-Z].*)' -> '${name}', input is now 'UpgradeHandler'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>[A-Z].*)\<.*\>' -> '${name}', input is now 'UpgradeHandler'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>.+)' -> '${name}Mock', input is now 'UpgradeHandlerMock'.
[PCLMock.CodeGeneration.Generator] [Positive] Generating mock for interface 'Genesis.DataStore.IUpgradeHandler' with namespace 'Genesis.DataStore.UnitTests.Mocks', name 'UpgradeHandlerMock'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Version'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol '{0}' because its return type is not a generic type, so it cannot be one of the supported collection types.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Version'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandler.Version' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Version'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Version'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Version.get'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandler.Version.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Version.get'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandler.Version.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Version.get'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandler.Version.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Version.get'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandler.Version.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Apply(SQLitePCL.pretty.IDatabaseConnection)'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol '{0}' because its return type is not a generic type, so it cannot be one of the supported collection types.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Apply(SQLitePCL.pretty.IDatabaseConnection)'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandler.Apply(SQLitePCL.pretty.IDatabaseConnection)' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Apply(SQLitePCL.pretty.IDatabaseConnection)'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandler.Apply(SQLitePCL.pretty.IDatabaseConnection)'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Determining inclusivity of interface: 'Genesis.DataStore.IUpgradeHandlerProvider, Genesis.DataStore'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after inclusion filter 'Genesis\.DataStore\..*', it is included.
[PCLMock.CodeGeneration.Models.Configuration] [Positive] 'Genesis.DataStore.IUpgradeHandlerProvider, Genesis.DataStore' has been included.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Applying namespace transformations to input: 'Genesis.DataStore'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'Genesis\.DataStore\.(?<remainder>.*)' -> 'Genesis.DataStore.UnitTests.${remainder}', input is now 'Genesis.DataStore'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'Genesis\.DataStore$' -> 'Genesis.DataStore.UnitTests', input is now 'Genesis.DataStore.UnitTests'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>.+)' -> '${name}.Mocks', input is now 'Genesis.DataStore.UnitTests.Mocks'.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Applying name transformations to input: 'IUpgradeHandlerProvider'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'I(?<name>[A-Z].*)' -> '${name}', input is now 'UpgradeHandlerProvider'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>[A-Z].*)\<.*\>' -> '${name}', input is now 'UpgradeHandlerProvider'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>.+)' -> '${name}Mock', input is now 'UpgradeHandlerProviderMock'.
[PCLMock.CodeGeneration.Generator] [Positive] Generating mock for interface 'Genesis.DataStore.IUpgradeHandlerProvider' with namespace 'Genesis.DataStore.UnitTests.Mocks', name 'UpgradeHandlerProviderMock'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers.get'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers.get'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers.get'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers.get'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol 'Genesis.DataStore.IUpgradeHandlerProvider.Handlers.get' because it is a method with an associated symbol.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Determining inclusivity of interface: 'Genesis.DataStore.Internal.IDataStoreVersionRepository, Genesis.DataStore'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after inclusion filter 'Genesis\.DataStore\..*', it is included.
[PCLMock.CodeGeneration.Models.Configuration] [Positive] 'Genesis.DataStore.Internal.IDataStoreVersionRepository, Genesis.DataStore' has been included.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Applying namespace transformations to input: 'Genesis.DataStore.Internal'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'Genesis\.DataStore\.(?<remainder>.*)' -> 'Genesis.DataStore.UnitTests.${remainder}', input is now 'Genesis.DataStore.UnitTests.Internal'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'Genesis\.DataStore$' -> 'Genesis.DataStore.UnitTests', input is now 'Genesis.DataStore.UnitTests.Internal'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>.+)' -> '${name}.Mocks', input is now 'Genesis.DataStore.UnitTests.Internal.Mocks'.
[PCLMock.CodeGeneration.Models.Configuration] [Info] Applying name transformations to input: 'IDataStoreVersionRepository'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation 'I(?<name>[A-Z].*)' -> '${name}', input is now 'DataStoreVersionRepository'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>[A-Z].*)\<.*\>' -> '${name}', input is now 'DataStoreVersionRepository'.
[PCLMock.CodeGeneration.Models.Configuration] [Debug]  - after transformation '(?<name>.+)' -> '${name}Mock', input is now 'DataStoreVersionRepositoryMock'.
[PCLMock.CodeGeneration.Generator] [Positive] Generating mock for interface 'Genesis.DataStore.Internal.IDataStoreVersionRepository' with namespace 'Genesis.DataStore.UnitTests.Internal.Mocks', name 'DataStoreVersionRepositoryMock'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.Internal.IDataStoreVersionRepository.Exists()'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol '{0}' because its return type is not a generic type, so it cannot be one of the supported collection types.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.Internal.IDataStoreVersionRepository.Exists()'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.Internal.IDataStoreVersionRepository.Exists()' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.Internal.IDataStoreVersionRepository.Exists()'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.Internal.IDataStoreVersionRepository.Exists()'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.DataStore.Internal.IDataStoreVersionRepository.GetLatest()'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol '{0}' because its return type is not a generic type, so it cannot be one of the supported collection types.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.Internal.IDataStoreVersionRepository.GetLatest()'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.DataStore.Internal.IDataStoreVersionRepository.GetLatest()' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.DataStore.Internal.IDataStoreVersionRepository.GetLatest()'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.DataStore.Internal.IDataStoreVersionRepository.GetLatest()'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Get(int)'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol '{0}' because its return type is not a generic type, so it cannot be one of the supported collection types.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Get(int)'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Get(int)' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Get(int)'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Get(int)'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.GetAll()'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.GetAll()'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.GetAll()' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.GetAll()'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.GetAll()'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Save(Genesis.DataStore.Internal.DataStoreVersionEntity)'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol '{0}' because its return type is not a generic type, so it cannot be one of the supported collection types.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Save(Genesis.DataStore.Internal.DataStoreVersionEntity)'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Save(Genesis.DataStore.Internal.DataStoreVersionEntity)' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Save(Genesis.DataStore.Internal.DataStoreVersionEntity)'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Save(Genesis.DataStore.Internal.DataStoreVersionEntity)'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.SaveAll(System.Collections.Generic.IEnumerable<Genesis.DataStore.Internal.DataStoreVersionEntity>)'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.SaveAll(System.Collections.Generic.IEnumerable<Genesis.DataStore.Internal.DataStoreVersionEntity>)'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.SaveAll(System.Collections.Generic.IEnumerable<Genesis.DataStore.Internal.DataStoreVersionEntity>)' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.SaveAll(System.Collections.Generic.IEnumerable<Genesis.DataStore.Internal.DataStoreVersionEntity>)'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.SaveAll(System.Collections.Generic.IEnumerable<Genesis.DataStore.Internal.DataStoreVersionEntity>)'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.SaveAll(params Genesis.DataStore.Internal.DataStoreVersionEntity[])'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.SaveAll(params Genesis.DataStore.Internal.DataStoreVersionEntity[])'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.SaveAll(params Genesis.DataStore.Internal.DataStoreVersionEntity[])' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.SaveAll(params Genesis.DataStore.Internal.DataStoreVersionEntity[])'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.SaveAll(params Genesis.DataStore.Internal.DataStoreVersionEntity[])'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Delete(int)'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol '{0}' because its return type is not a generic type, so it cannot be one of the supported collection types.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Delete(int)'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Delete(int)' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Delete(int)'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.Delete(int)'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.DeleteAll()'.
[PCLMock.CodeGeneration.Plugins.Collections] [Debug] Ignoring symbol '{0}' because its return type is not a generic type, so it cannot be one of the supported collection types.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.DeleteAll()'.
[PCLMock.CodeGeneration.Plugins.TaskBasedAsynchrony] [Debug] Ignoring symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.DeleteAll()' because it does not return a Task or Task<T>.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.DeleteAll()'.
[PCLMock.CodeGeneration.Plugins.ObservableBasedAsynchrony] [Warn] Failed to resolve System.Reactive.Linq.Observable.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Considering symbol 'Genesis.Repository.IRepository<int, Genesis.DataStore.Internal.DataStoreVersionEntity>.DeleteAll()'.
[PCLMock.CodeGeneration.Plugins.Disposables] [Debug] Ignoring symbol '{0}' because its return type is not IDisposable.

*/
